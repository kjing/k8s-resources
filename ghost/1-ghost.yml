apiVersion: v1
kind: Service
metadata:
  name: ghost
  labels:
    app: ghost
spec:
  selector:
    app: ghost
  type: LoadBalancer
  ports:
  - port: 80 # service port
    targetPort: ghost  # port on container
    protocol: TCP
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ghost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      name: ghost
      labels:
        app: ghost
    spec:
      containers:
      - name: ghost
        # Uncomment below to allocate a tty if ever needed
        # stdin: true
        # tty: true
        image: ghost:0.9.0
        imagePullPolicy: Always
        resources:  # http://kubernetes.io/docs/user-guide/compute-resources/
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - name: ghost
          containerPort: 2368
          protocol: TCP
        # env:
        # - name: NODE_ENV
        #   value: production
        # - name: VIRTUAL_HOST
        #   value: your.domain.tld
        # command: ["npm", "start", "--production"]
      #   volumeMounts:
      #   - name: ghost-config
      #     mountPath: /var/lib/ghost
      #   # - name: ghost-content
      #   #   mountPath: /usr/src/ghost/content
      # volumes:
      # - name: ghost-content
      #   gcePersistentDisk:
      #     # This GCE persistent disk must already exist
      #     pdName: ghost-content
      #     fsType: ext4
      # - name: ghost-config
      #   configMap:
      #     name: ghost


# This is a way to mount individual files inside a volume?
# need to test.  Note the "subpath" key below. Could this be 
# used to inject the Ghost configuration?  
+apiVersion: v1
 +kind: Pod
 +metadata:
 +  name: config-single-file-volume-pod
 +spec:
 +  containers:
 +    - name: test-container
 +      image: gcr.io/google_containers/busybox
 +      command: [ "/bin/sh", "-c", "cat /etc/special-key" ]
 +      volumeMounts:
 +      - name: config-volume
 +        mountPath: /etc/special-key
 +        subPath: path/to/special-key
 +  volumes:
 +    - name: config-volume
 +      configMap:
 +        name: test-configmap
 +        items:
 +        - key: data-1
 +          path: path/to/special-key
 +  restartPolicy: Never
